enum OrganizationType {
  VENDOR // Can sell products AND make purchases
  BILLING // Can only make purchases
}

model Organization {
  id        String           @id @default(cuid())
  name      String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  type      OrganizationType @default(BILLING)

  // Owner relationship - essential to establish ownership
  ownerId String
  owner   User   @relation("OwnedOrganizations", fields: [ownerId], references: [id])

  // Members relationship - essential for multi-user access
  members OrganizationMember[]

  // Current users tracking - for UI context
  currentUsers User[] @relation("CurrentOrganization")

  // Entity relationships
  prospects     Prospect[]  @relation(name: "prospects")
  @@index([ownerId])
}

enum OrganizationRole {
  OWNER
  ADMIN
  MEMBER
}

model OrganizationMember {
  organizationId String
  organization   Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  userId         String
  user           User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  role           OrganizationRole @default(MEMBER)
  createdAt      DateTime         @default(now())

  @@id([organizationId, userId])
  @@index([organizationId])
  @@index([userId])
}
